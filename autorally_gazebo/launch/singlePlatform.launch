<?xml version="1.0"?>


<!-- singlePlatform.launch

Use Gazebo to simulate a vehicle with Ackermann steering.

Arguments:
    namespace (string, default: auto_rally_platform)
        Vehicle namespace.
    x (float, default: 0.0)
    y (float, default: 0.0)
    z (float, default: 0.1)
    roll (float, default: 0.0)
    pitch (float, default: 0.0)
    yaw (float, default: 0.0)
        Vehicle pose. x, y, and z are measured in meters. roll, pitch, and yaw
        are measured in radians.

Copyright (c) 2013 Wunderkammer Laboratory

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->




<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(find autorally_description)"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find autorally_description)"/>
  <arg name="namespace" default="autorally_platform"/>
  <arg name="world_name" default="model://urdf/populated_AR.world"/>
  <arg name="cmd_timeout" default="0.5"/>

  <!-- Vehicle pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="-8.5"/>
  <arg name="z" default="0.3"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.785498"/>

  <arg name="vehicle_name" default="1"/>

  <param name="robot_description" command="$(find xacro)/xacro $(find autorally_description)/urdf/autoRallyPlatform.urdf.xacro prefix:=$(arg namespace)"/>

  <node name="autoRally_state_publisher" pkg="robot_state_publisher"
        type="robot_state_publisher">
    <param name="publish_frequency" value="50.0"/>
  </node>


  <node name="spawn_platform" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model autoRallyPlatform$(arg vehicle_name)
              -gazebo_namespace /autorally_platform/gazebo
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>


  <!-- load controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
          args="$(find autorally_gazebo)/config/autoRallyPlatformJointCtrlrParams.yaml"/>

  <!-- Control the steering, axle, and shock absorber joints. -->
  <node name="autorally_controller" pkg="autorally_gazebo"
        type="autorally_controller.py" output="screen">
    <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
    <param name="namespace" value="$(arg namespace)"/>
    <rosparam file="$(find autorally_gazebo)/config/autoRallyPlatformCtrlrParams.yaml" command="load"/>
    <rosparam param="chassisCommandProirities" command="load" file="$(env AR_CONFIG_PATH)/chassisCommandPriorities.yaml" />
  </node>
</launch>
